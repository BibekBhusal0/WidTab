@import "tailwindcss";

@plugin 'tailwindcss-animate';
@plugin '@tailwindcss/typography';

@custom-variant dark (&:is(.dark *));

@theme {
  --color-primary-main: var(--mui-palette-primary-main);
  --color-primary-light: var(--mui-palette-primary-light);
  --color-primary-dark: var(--mui-palette-primary-dark);
  --color-primary-contrast-text: var(--mui-palette-primary-contrastText);
  --color-transparent-primary-main: var(--mui-palette-transparentPrimary-main);
  --color-transparent-primary-light: var(--mui-palette-transparentPrimary-light);
  --color-transparent-primary-dark: var(--mui-palette-transparentPrimary-dark);
  --color-transparent-primary-contrast-text: var(--mui-palette-transparentPrimary-contrastText);
  --color-secondary-main: var(--mui-palette-secondary-main);
  --color-secondary-light: var(--mui-palette-secondary-light);
  --color-secondary-dark: var(--mui-palette-secondary-dark);
  --color-secondary-contrast-text: var(--mui-palette-secondary-contrastText);
  --color-error-main: var(--mui-palette-error-main);
  --color-error-light: var(--mui-palette-error-light);
  --color-error-dark: var(--mui-palette-error-dark);
  --color-error-contrast-text: var(--mui-palette-error-contrastText);
  --color-info-main: var(--mui-palette-info-main);
  --color-info-light: var(--mui-palette-info-light);
  --color-info-dark: var(--mui-palette-info-dark);
  --color-info-contrast-text: var(--mui-palette-info-contrastText);
  --color-success-main: var(--mui-palette-success-main);
  --color-success-light: var(--mui-palette-success-light);
  --color-success-dark: var(--mui-palette-success-dark);
  --color-success-contrast-text: var(--mui-palette-success-contrastText);
  --color-warning-main: var(--mui-palette-warning-main);
  --color-warning-light: var(--mui-palette-warning-light);
  --color-warning-dark: var(--mui-palette-warning-dark);
  --color-warning-contrast-text: var(--mui-palette-warning-contrastText);
  --color-background-default: var(--mui-palette-background-default);
  --color-background-paper: var(--mui-palette-background-paper);
  --color-primary-container-default: var(--mui-palette-primaryContainer-default);
  --color-primary-container-paper: var(--mui-palette-primaryContainer-paper);
  --color-secondary-container-default: var(--mui-palette-secondaryContainer-default);
  --color-secondary-container-paper: var(--mui-palette-secondaryContainer-paper);
  --color-tertiary-container-default: var(--mui-palette-tertiaryContainer-default);
  --color-tertiary-container-paper: var(--mui-palette-tertiaryContainer-paper);
  --color-primary-1: var(--primary-1);
  --color-primary-2: var(--primary-2);
  --color-primary-3: var(--primary-3);
  --color-primary-4: var(--primary-4);
  --color-primary-5: var(--primary-5);
  --color-primary-6: var(--primary-6);
  --color-primary-7: var(--primary-7);
  --color-primary-8: var(--primary-8);
  --color-primary-9: var(--primary-9);
  --color-text-primary: var(--mui-palette-text-primary);
  --color-text-disabled: var(--mui-palette-text-disabled);
  --color-text-secondary: var(--mui-palette-text-secondary);
  --color-primary-selected: rgb(var(--mui-palette-primary-mainChannel) / var(--mui-palette-action-selectedOpacity));
  --color-secondary-selected: rgb(var(--mui-palette-secondary-mainChannel) / var(--mui-palette-action-selectedOpacity));
  --color-success-selected: rgb(var(--mui-palette-success-mainChannel) / var(--mui-palette-action-selectedOpacity));
  --color-error-selected: rgb(var(--mui-palette-error-mainChannel) / var(--mui-palette-action-selectedOpacity));
  --color-info-selected: rgb(var(--mui-palette-info-mainChannel) / var(--mui-palette-action-selectedOpacity));
  --color-warning-selected: rgb(var(--mui-palette-warning-mainChannel) / var(--mui-palette-action-selectedOpacity));
  --color-divider: var(--mui-palette-divider);

  --backdrop-blur-themed: var(--custom-blur);
  --backdrop-blur-half: calc(var(--custom-blur) / 2);

  --blur-themed: var(--custom-blur);
  --blur-half: calc(var(--custom-blur) / 2);

  --radius-themed: var(--custom-border-radius);

  --animate-spin-slow: spin 20s linear infinite;
}

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {

  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--mui-palette-divider);
  }
}

@utility flex-center {
  @apply flex justify-center items-center;
}

@utility between {
  @apply flex justify-between items-center;
}

@utility full-between {
  @apply between w-full gap-4;
}

@utility horizontal-center {
  @apply absolute left-1/2 -translate-x-1/2;
}

@utility vertical-center {
  @apply absolute top-1/2 -translate-y-1/2;
}

@utility absolute-center {
  @apply horizontal-center vertical-center;
}

/* editor styles apparently tailwind v4 don't allow to put this in new file*/

.child-full>div {
  @apply size-full;
}

.todo-list {

  .is-editor-empty:first-child::before,
  .is-empty::before {
    display: none;
  }

  .is-editor-empty:first-child::after,
  .is-empty::after {
    @apply h-0 float-left pointer-events-none text-divider;
    content: attr(data-placeholder);
    pointer-events: none;
    margin-left: -9px;
  }

  ul[data-type="taskList"] li[data-checked="true"]>div {
    @apply line-through text-text-disabled;
    text-decoration-thickness: 2px;
  }

  ul[data-type="taskList"] li>div {
    @apply text-text-primary;
  }

  ul[data-type="taskList"] li>label {
    margin-right: 0.2rem;
  }
}

.prose-sm ul[data-type="taskList"] li>label input[type="checkbox"] {
  @apply top-[1.2px];
}

.prose-xl ul[data-type="taskList"] li>label input[type="checkbox"] {
  @apply top-[6.4px];
}

.moveable-line {
  background-color: var(--mui-palette-text-primary) !important;
  padding: 1px;
}

.moveable-control {
  border-color: var(--mui-palette-text-primary) !important;
  background-color: var(--mui-palette-primary-contrastText) !important;
}

.pre:not(.node-codeBlock)[data-placeholder]:not(:empty)::before {
  @apply h-0 float-left pointer-events-none text-divider;
  content: attr(data-placeholder);
  pointer-events: none;
}

.ProseMirror {
  @apply p-2 pl-5;

  p {
    @apply text-base;
  }

  blockquote {
    @apply border-l-4;
  }

  hr {
    @apply border-2 mt-4 mb-6;
  }

  li {
    @apply leading-normal marker:text-divider;
  }

  ol {
    @apply list-decimal list-outside leading-3;
  }

  ul {
    @apply list-disc list-outside leading-3;
  }

  pre {
    @apply border p-4;
  }

  code {
    @apply font-mono font-medium;
  }

  a {
    @apply underline underline-offset-[3px] hover:text-primary-main transition-colors cursor-pointer;
  }

  ul[data-type="taskList"] {
    @apply pl-1;

    li {
      @apply flex gap-2 items-start;

      >label {
        user-select: none;

        input[type="checkbox"] {
          @apply appearance-none bg-transparent rounded-themed m-0 cursor-pointer size-5 relative border-primary-main border-2 grid place-content-center hover:bg-primary-3 active:bg-primary-5 checked:bg-primary-main checked:hover:bg-primary-main;
          @apply before:content-[''] before:size-3 before:scale-0 before:transition-transform before:duration-100 before:ease-in-out before:origin-center checked:before:scale-100 text-primary-contrast-text;

          &::before {
            box-shadow: inset 1em 1em;
            clip-path: polygon(14% 44%,
                0 65%,
                50% 100%,
                100% 16%,
                80% 0%,
                43% 62%);
          }
        }
      }

      &[data-checked="true"]>div>p {
        @apply line-through text-text-disabled;
        text-decoration-thickness: 1px;
      }

      >div>p {
        @apply m-0;
      }
    }
  }

  .tippy-box {
    max-width: 400px !important;
  }

  :not(.dragging) .ProseMirror-selectednode {
    outline: none !important;
    transition: background-color 0.2s;
    box-shadow: none;
  }

  span[style]>strong {
    color: inherit;
  }

  mark[style]>strong {
    color: inherit;
  }
}

.editor .drag-handle {
  @apply fixed bg-no-repeat bg-center size-6 z-50 duration-200 cursor-grab transition-colors rounded-md;
  @apply hover:bg-stone-100/10 active:bg-stone-200/5 active:cursor-grabbing;

  &.hide {
    @apply opacity-0 pointer-events-none;
  }

  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 10 10' style='fill: rgba(0, 0, 0, 0.5)'%3E%3Cpath d='M3,2 C2.44771525,2 2,1.55228475 2,1 C2,0.44771525 2.44771525,0 3,0 C3.55228475,0 4,0.44771525 4,1 C4,1.55228475 3.55228475,2 3,2 Z M3,6 C2.44771525,6 2,5.55228475 2,5 C2,4.44771525 2.44771525,4 3,4 C3.55228475,4 4,4.44771525 4,5 C4,5.55228475 3.55228475,6 3,6 Z M3,10 C2.44771525,10 2,9.55228475 2,9 C2,8.44771525 2.44771525,8 3,8 C3.55228475,8 4,8.44771525 4,9 C4,9.55228475 3.55228475,10 3,10 Z M7,2 C6.44771525,2 6,1.55228475 6,1 C6,0.44771525 6.44771525,0 7,0 C7.55228475,0 8,0.44771525 8,1 C8,1.55228475 7.55228475,2 7,2 Z M7,6 C6.44771525,6 6,5.55228475 6,5 C6,4.44771525 6.44771525,4 7,4 C7.55228475,4 8,4.44771525 8,5 C8,5.55228475 7.55228475,6 7,6 Z M7,10 C6.44771525,10 6,9.55228475 6,9 C6,8.44771525 6.44771525,8 7,8 C7.55228475,8 8,8.44771525 8,9 C8,9.55228475 7.55228475,10 7,10 Z'%3E%3C/path%3E%3C/svg%3E");
  background-size: calc(0.5em + 0.375rem) calc(0.5em + 0.375rem);
}

.dark .editor .drag-handle {
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 10 10' style='fill: rgba(255, 255, 255, 0.5)'%3E%3Cpath d='M3,2 C2.44771525,2 2,1.55228475 2,1 C2,0.44771525 2.44771525,0 3,0 C3.55228475,0 4,0.44771525 4,1 C4,1.55228475 3.55228475,2 3,2 Z M3,6 C2.44771525,6 2,5.55228475 2,5 C2,4.44771525 2.44771525,4 3,4 C3.55228475,4 4,4.44771525 4,5 C4,5.55228475 3.55228475,6 3,6 Z M3,10 C2.44771525,10 2,9.55228475 2,9 C2,8.44771525 2.44771525,8 3,8 C3.55228475,8 4,8.44771525 4,9 C4,9.55228475 3.55228475,10 3,10 Z M7,2 C6.44771525,2 6,1.55228475 6,1 C6,0.44771525 6.44771525,0 7,0 C7.55228475,0 8,0.44771525 8,1 C8,1.55228475 7.55228475,2 7,2 Z M7,6 C6.44771525,6 6,5.55228475 6,5 C6,4.44771525 6.44771525,4 7,4 C7.55228475,4 8,4.44771525 8,5 C8,5.55228475 7.55228475,6 7,6 Z M7,10 C6.44771525,10 6,9.55228475 6,9 C6,8.44771525 6.44771525,8 7,8 C7.55228475,8 8,8.44771525 8,9 C8,9.55228475 7.55228475,10 7,10 Z'%3E%3C/path%3E%3C/svg%3E");
}

/*!
    SYNTAX HIGHLIGHT
    Theme: GitHub / Github Dark
    Author: github.com
    Maintainer: @Hirse
    Updated: 2021-05-15
    Outdated base versions: https://github.com/primer/github-syntax-dark & : https://github.com/primer/github-syntax-light
    Current colors taken from GitHub's CSS
  */

.hljs {
  color: #24292e !important;
  background: #ffffff !important;
}

.hljs-doctag,
.hljs-keyword,
.hljs-meta .hljs-keyword,
.hljs-template-tag,
.hljs-template-variable,
.hljs-type,
.hljs-variable.language_ {
  color: #d73a49;
}

.hljs-title,
.hljs-title.class_,
.hljs-title.class_.inherited__,
.hljs-title.function_ {
  color: #6f42c1;
}

.hljs-attr,
.hljs-attribute,
.hljs-literal,
.hljs-meta,
.hljs-number,
.hljs-operator,
.hljs-variable,
.hljs-selector-attr,
.hljs-selector-class,
.hljs-selector-id {
  color: #005cc5;
}

.hljs-regexp,
.hljs-string,
.hljs-meta .hljs-string {
  color: #032f62;
}

.hljs-built_in,
.hljs-symbol {
  color: #e36209;
}

.hljs-comment,
.hljs-code,
.hljs-formula {
  color: #6a737d;
}

.hljs-name,
.hljs-quote,
.hljs-selector-tag,
.hljs-selector-pseudo {
  color: #22863a;
}

.hljs-subst {
  color: #24292e;
}

.hljs-section {
  color: #005cc5;
  font-weight: bold;
}

.hljs-bullet {
  color: #735c0f;
}

.hljs-emphasis {
  color: #24292e;
  font-style: italic;
}

.hljs-strong {
  color: #24292e;
  font-weight: bold;
}

.hljs-addition {
  color: #22863a;
  background-color: #f0fff4;
}

.hljs-deletion {
  color: #b31d28;
  background-color: #ffeef0;
}

.hljs-char.escape_,
.hljs-link,
.hljs-params,
.hljs-property,
.hljs-punctuation,
.hljs-tag {
  /* purposely ignored */
}

.dark {
  .hljs {
    color: #c9d1d9 !important;
    background: #0d1117 !important;
  }

  .hljs-doctag,
  .hljs-keyword,
  .hljs-meta .hljs-keyword,
  .hljs-template-tag,
  .hljs-template-variable,
  .hljs-type,
  .hljs-variable.language_ {
    color: #ff7b72;
  }

  .hljs-title,
  .hljs-title.class_,
  .hljs-title.class_.inherited__,
  .hljs-title.function_ {
    color: #d2a8ff;
  }

  .hljs-attr,
  .hljs-attribute,
  .hljs-literal,
  .hljs-meta,
  .hljs-number,
  .hljs-operator,
  .hljs-variable,
  .hljs-selector-attr,
  .hljs-selector-class,
  .hljs-selector-id {
    color: #79c0ff;
  }

  .hljs-regexp,
  .hljs-string,
  .hljs-meta .hljs-string {
    color: #a5d6ff;
  }

  .hljs-built_in,
  .hljs-symbol {
    color: #ffa657;
  }

  .hljs-comment,
  .hljs-code,
  .hljs-formula {
    color: #8b949e;
  }

  .hljs-name,
  .hljs-quote,
  .hljs-selector-tag,
  .hljs-selector-pseudo {
    color: #7ee787;
  }

  .hljs-subst {
    color: #c9d1d9;
  }

  .hljs-section {
    color: #1f6feb;
    font-weight: bold;
  }

  .hljs-bullet {
    color: #f2cc60;
  }

  .hljs-emphasis {
    color: #c9d1d9;
    font-style: italic;
  }

  .hljs-strong {
    color: #c9d1d9;
    font-weight: bold;
  }

  .hljs-addition {
    color: #aff5b4;
    background-color: #033a16;
  }

  .hljs-deletion {
    color: #ffdcd7;
    background-color: #67060c;
  }

  .hljs-char.escape_,
  .hljs-link,
  .hljs-params,
  .hljs-property,
  .hljs-punctuation,
  .hljs-tag {
    /* purposely ignored */
  }
}
